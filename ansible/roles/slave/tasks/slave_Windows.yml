# Ansible does not have windows versions of copy, so copying from the vagrant
# default share is necessary as is the requirement that windows can must be
# treated as a vagrant virtual machine.
# This also means that templates are impossible at this time.
# Instead, there are many raw commands. Even dealing with idempotency is
# difficult with the current level of windows support.
#
# "script" has an option "creates=" that should be used to determine if the task
# is complete when some thing is created on the file system, but it uses the
# stat module internally which is not supported on windows. On windows, the stat
# alternative win_stat has to be explicitly used instead.
---
##
## BUILD DEPS
##

# dependency: compiler
- include: w_visualstudio.yml
  vars:
    file: "{{ vs_file }}"
    base_url: "{{ vs_url }}"
    tags:
      - visualstudio

# dependency: compiler
- include: w_cmake.yml
  vars:
    file: "{{ cmake_file }}"
    base_url: "{{ cmake_url }}"
    tags:
      - visualstudio

# dependency: repository
- include: w_git.yml
  vars:
    file: "{{ git_file }}"
    base_url: "{{ git_url }}"
    tags:
      - git

# dependency: buildbot
- include: w_python.yml
  vars:
    file: "{{ python_file }}"
    base_url: "{{ python_url }}"
    tags:
      - python
      - buildbot

# dependency: buildbot
- include: w_pywin32.yml
  vars:
    file: "{{ pywin32_file }}"
    base_url: "{{ pywin32_url }}"
    tags:
      - pywin32
      - buildbot

# dependency: symstore
- include: w_wdk.yml
  vars:
    file: "{{ wdk_file }}"
    base_url: "{{ wdk_url }}"
    tags:
      - wdk

# dependency: compiling extensions on python 2.7
- include: w_vcp27.yml
  vars:
    file: "{{ vcp27_file }}"
    base_url: "{{ vcp27_url }}"
    tags:
      - python

##
## PIP DEPENDENCIES
##
# http://trac.buildbot.net/wiki/RunningBuildbotOnWindows
- name: Install buildslave
  raw: "pip install buildbot-slave"

##
## BUILDBOT DEPLOY
##
# Without the ability to change users in windows, this makes tasks harder than
# they should be to create. Given the incompleteness of features on windows,
# the vagrant user is the buildbot user.
# - name: Create buildbot user
#   win_user:
#     name: "{{ buildbot_username }}"
#     password: "{{ buildbot_username }}"
#     state: present

- name: Is buildbot area present?
  win_stat:
    path: "c:\\{{ buildbot_username }}"
  register: buildbot_area

- name: Create buildbot area
  raw: "mkdir c:\\{{ buildbot_username }}"
  when: not buildbot_area.stat.exists

- name: Install buildbot symbol store utility
  raw: "copy c:\\vagrant\\ansible\\roles\\slave\\files\\storesymbols.bat c:\\buildbot\\storesymbols.bat"
  when: not buildbot_area.stat.exists

##
## SYMBOLSTORE
##
- name: Is symbol area present?
  win_stat:
    path: "c:\\symbols"
  register: symbol_area

- name: Create symbol store folder
  raw: "mkdir c:\\symbols"
  when: not symbol_area.stat.exists

- name: Create local symbol store folder
  raw: "mkdir c:\\localsymbols"
  when: not symbol_area.stat.exists

# https://randomascii.wordpress.com/2013/03/09/symbols-the-microsoft-way/
# https://msdn.microsoft.com/en-us/library/windows/hardware/ff537994%28v=vs.85%29.aspx
- name: Add symbol store to path
  raw: powershell [Environment]::SetEnvironmentVariable('_NT_SYMBOL_PATH', 'srv*c:\localsymbols*c:\symbols*https://msdl.microsoft.com/download/symbols', [EnvironmentVariableTarget]::Machine)
  when: not symbol_area.stat.exists

#
# BUILDBOT
#
- name: Create build slave
  raw: "buildslave create-slave c:\\{{ buildbot_username }} {{ buildmaster_host }}:{{ buildmaster_port }} {{ slave_username }} {{ slave_password }}"

# Adding the service does not grant the logon privilege. This must be done
# explicitly.
- name: Install logon as service privilege utility
  raw: "copy c:\\vagrant\\ansible\\roles\\slave\\files\\lsa_add_logon_as_svc.ps1 c:\\tmp"

- name: Allow buildbot service logon
  raw: "powershell c:\\tmp\\lsa_add_logon_as_svc.ps1 {{ ansible_ssh_user }}"

# The user should be the unprivileged user but since the user being used is the
# "root" user, the logon as details are for that user.
- name: Create buildbot service
  raw: "c:\\python27\\python.exe c:\\python27\\scripts\\buildbot_service.py --user .\\{{ ansible_ssh_user }} --password {{ ansible_ssh_pass }} --startup auto install"
  notify: restart windows buildbot

- name: Set buildbot service registry
  raw: "reg ADD HKLM\\SYSTEM\\CurrentControlSet\\services\\Buildbot\\Parameters\\ /v directories /t REG_SZ /d C:\\{{ buildbot_username }} /f"

- name: Start build slave
  win_service:
    name: BuildBot
    start_mode: auto
    state: restarted

#
# Finalisation
#
- name: Enable autologon
  raw: reg ADD "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" /v AutoAdminLogon /t REG_DWORD /d 1 /f
  tags: autologon

