---
##
## USER
##
- name: Add buildbot user
  user:
    name: "{{ buildbot_username }}"
    home: "/home/{{ buildbot_username }}"
    shell: /bin/bash
    state: present

- name: Add public key to login as buildbot
  authorized_key:
    user: "{{ buildbot_username }}"
    key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

- name: Add github to known_hosts
  become: yes
  become_user: "{{ buildbot_username }}"
  lineinfile:
    create: yes
    dest: ~/.ssh/known_hosts
    line: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
    regexp: "^github\\.com"
    state: present

##
## COMMON PKG
##
- name: Install common build dependencies
  apt:
    pkg: "{{ item }}"
    state: present
  with_items:
    - cmake
    - gcc
    - g++
    - make
    - python
    - python-dev
    - python-pip
    - gdb
    - libxrandr-dev
    - libxcursor-dev
    - libxinerama-dev
    - ninja-build
    - mesa-utils
    - libgl1-mesa-dev
    - mesa-common-dev
    - libpcre3-dev
    - lcov
    - subversion
    - clang
    - cppcheck

- name: Upgrade pip
  pip:
    name: pip
    state: latest

#
# OPENGL
#
- include: debian_opengl.yml
  tags: opengl

##
## BUILDBOT
##
- name: Install buildbot-slave
  apt:
    pkg: "{{ item }}"
    state: present
  with_items:
    - buildbot-slave

- name: Create build slave
  become: yes
  become_user: "{{ buildbot_username }}"
  shell: "buildslave create-slave --umask=022 . {{ buildmaster_host }}:{{ buildmaster_worker_port }} {{ slave_username }} {{ slave_password }}"
  args:
    creates: info/admin

- name: Update slave host information
  become: yes
  become_user: "{{ buildbot_username }}"
  template:
    src: buildbot_info_host.j2
    dest: info/host

- name: Update slave admin information
  become: yes
  become_user: "{{ buildbot_username }}"
  template:
    src: buildbot_info_admin.j2
    dest: info/admin

- name: Enable buildslave init.d
  template:
    src: etc_default_buildslave.j2
    dest: /etc/default/buildslave
    backup: yes
    mode: 0644
  notify: restart debian buildbot

